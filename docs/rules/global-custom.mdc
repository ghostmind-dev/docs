---
description: Global MCP documentation management rules and guidelines
globs:
alwaysApply: true
---

# Global Documentation Management MCP

This project uses a specialized **Model Context Protocol (MCP) Server** for managing global documentation across remote GitHub repositories. When you need to interact with, modify, or manage global documentation, you must use the documentation management MCP tool specifically.

## When to Use the Documentation Management MCP

Use the documentation management MCP tool when you need to:

- Access global documentation configurations
- Browse remote documentation repositories
- Read content from global documentation files
- Update or modify existing documentation
- Add new documentation files
- Manage documentation across organizational repositories

## Documentation Management Tool Usage

### Always Use This Specific Request

When you want to call the documentation management tool, use this exact phrasing:

**"I want to use the global documentation management MCP"**

This ensures the correct MCP server is invoked for documentation operations.

## Available Documentation Configurations

The system provides access to these global documentation areas:

- **app** - Application build guidelines and organizational standards
- **base** - Base configuration and development environment setup
- **custom** - Customization guidelines and configuration options
- **docker** - Docker configuration and containerization documentation
- **infra** - Infrastructure setup and deployment documentation
- **local** - Local development environment setup and configuration
- **rules** - Global custom rules and development practice guidelines

## Standard Documentation Workflow

### 1. Discovery Phase
```
"I want to use the global documentation management MCP to list available documentation"
```

### 2. Exploration Phase
```
"I want to use the global documentation management MCP to examine the [config_name] documentation"
```

### 3. Modification Phase
```
"I want to use the global documentation management MCP to update [specific_file] in [config_name]"
```

## Key Principles

- **Always specify the MCP**: Never assume which tool to use - explicitly request the documentation management MCP
- **Remote-first**: All operations work directly with remote GitHub repositories
- **Pull Request workflow**: All modifications create pull requests for review
- **No local cloning**: Everything happens via GitHub API calls
- **Structured access**: Use configuration names to access specific documentation areas

## Important Notes

- All documentation operations are performed remotely via GitHub API
- Changes are submitted as pull requests for review and approval
- The system maintains security by restricting access to predefined documentation repositories
- Always use the exact phrase "global documentation management MCP" to ensure proper tool selection
- This is the preferred and required method for managing organizational documentation

## Examples

### Correct Usage
✅ "I want to use the global documentation management MCP to update the app documentation"
✅ "Use the global documentation management MCP to check what infrastructure docs are available"
✅ "I need to add a new rule using the global documentation management MCP"

### Incorrect Usage
❌ "Update the documentation" (too vague - doesn't specify MCP)
❌ "Use the GitHub tool" (not specific enough)
❌ "Edit the docs" (doesn't invoke the correct MCP)